#+TITLE: company: Auto complete anything, anywhere
#+AUTHOR: Aqeel Akber

* company

Auto completion of everything with nice backends. I want to complete
everything, everywhere!

Web: http://company-mode.github.io/
Git: https://github.com/company-mode/company-mode
Blog: https://aqeelakber.com/2017/01/08/emacs-company-mode/

#+BEGIN_SRC emacs-lisp
  (use-package company :ensure t
    :defer t
    :hook (after-init . global-company-mode)
    :custom
   (company-begin-commands '(self-insert-command))
   (company-idle-delay .2)
   (company-minimum-prefix-length 0)
   (company-show-numbers t)
   (company-tooltip-align-annotations 't)
    :config
    (setq company-idle-delay 0)
    (setq company-echo-delay 0)
    (setq company-minimum-prefix-length 2)

   (define-key company-active-map (kbd "M-n") nil)
   (define-key company-active-map (kbd "M-p") nil)
   (define-key company-active-map (kbd "C-n") #'company-select-next-or-abort)
   (define-key company-active-map (kbd "C-p") #'company-select-previous-or-abort)
   (setq company-frontends '(company-echo-metadata-frontend
                             company-pseudo-tooltip-unless-just-one-frontend
                             company-preview-frontend))

   (setq company-backends '((company-capf
                             company-files)
                            (company-dabbrev-code company-keywords)
                            company-dabbrev company-yasnippet)))

#+END_SRC

* Company Quickhelp
 
#+BEGIN_SRC emacs-lisp
  (use-package company-quickhelp
    :defer 5
    :config (company-quickhelp-mode))
  #+END_SRC

* Fixing =yasnippet= conflict

Pressing tab with company mode conflicts with =yasnippets=, this is
the only fix that I found that makes everything work as expected.

#+BEGIN_SRC emacs-lisp
  (defun check-expansion ()
    (save-excursion
      (if (looking-at "\\_>") t
        (backward-char 1)
        (if (looking-at "\\.") t
          (backward-char 1)
          (if (looking-at "->") t nil)))))

  (defun do-yas-expand ()
    (let ((yas/fallback-behavior 'return-nil))
      (yas/expand)))

  (defun tab-indent-or-complete ()
    (interactive)
    (if (minibufferp)
        (minibuffer-complete)
      (if (or (not yas/minor-mode)
              (null (do-yas-expand)))
          (if (check-expansion)
              (company-complete-common)
            (indent-for-tab-command)))))


  (global-set-key [tab] 'tab-indent-or-complete)
#+END_SRC
