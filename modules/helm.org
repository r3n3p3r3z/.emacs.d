#+TITLE: helm: Indescribably awesome

Helm is incredible, it really supercharges emacs. It's a framework for
incremental searching / completion / narrowing down options. Sounds
simple, and it is in application, and it's so worth it.

Web: https://emacs-helm.github.io/helm/
Git: https://github.com/emacs-helm/helm

#+BEGIN_SRC emacs-lisp
  (use-package helm
    :ensure t
    :init
    (helm-mode)
    :bind
    (("M-x"     . helm-M-x)
     ("C-x b"   . helm-mini)
     ("C-x C-f" . helm-find-files)
     ("C-x C-b" . helm-buffers-list)
     ("M-s"     . helm-occur)
     ("M-y"     . helm-show-kill-ring)
     ("C-h f"   . helm-apropos)
     ("C-h g"   . helm-google-suggest))
    :config
    ;; Aesthetics
    (setq helm-autoresize-mode t)
    (setq helm-split-window-in-side-p t)
    ;; Fuzzy matching
    (setq helm-recentf-fuzzy-match       t
          helm-buffers-fuzzy-matching    t
          helm-recentf-fuzzy-match       t
          helm-buffers-fuzzy-matching    t
          helm-locate-fuzzy-match        t
          helm-apropos-fuzzy-match       t
          helm-lisp-fuzzy-completion     t
          helm-candidate-number-limit    100)
    )
#+END_SRC

** The overloaded tab key

The good ol' =TAB= key is used for a lot, in this case I want to make
sure that when used in helm that it completes in helm, not attempting
to insert a snippet or something.

#+BEGIN_SRC emacs-lisp

  (define-key helm-map (kbd "<tab>") 'helm-execute-persistent-action)
#+END_SRC

Also, the following makes sure that tab works when running in terminal
mode:

#+BEGIN_SRC emacs-lisp
  (define-key helm-map (kbd "C-i") 'helm-execute-persistent-action)
#+END_SRC

This requires fixing the select other actions which IIRC is set to
=C-i= by default.

#+BEGIN_SRC emacs-lisp
  (define-key helm-map (kbd "C-z") 'helm-select-action)
#+END_SRC
