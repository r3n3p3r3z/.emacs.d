#+TITLE: Notdeft

* notdeft
#+BEGIN_SRC emacs-lisp
 (add-to-list 'load-path "~/.emacs.d/elpa/notdeft-0.6.20190210")
 (load "notdeft-example")


(add-hook 'org-mode-hook 'notdeft-note-mode)

 (setq notdeft-directories '("~/org/notes"))
 (setq notdeft-extension "org")

;(setq notdeft-secondary-extensions '("txt"))

(defun bjm-deft-save-windows (orig-fun &rest args)
  (setq bjm-pre-deft-window-config (current-window-configuration))
  (apply orig-fun args)
  )

(advice-add 'notdeft :around #'bjm-deft-save-windows)



(defun bjm-quit-deft ()
  "Save buffer, kill buffer, kill deft buffer, and restore window config to the way it was before deft was invoked"
  (interactive)
  (save-buffer)
  (kill-this-buffer)
  (switch-to-buffer "*NotDeft*")
  (kill-this-buffer)
  (when (window-configuration-p bjm-pre-deft-window-config)
    (set-window-configuration bjm-pre-deft-window-config)
    )
  )

(global-set-key (kbd "C-c q") 'bjm-quit-deft)


(defun notdeft-new-file-named (pfx title &optional data)
  "Create a new file, prompting for a title.
The prefix argument PFX is as for `notdeft-new-file'.
Query for a TITLE when invoked as a command.
Initialize the file with DATA, or TITLE if not given.
Return the filename of the created file."
  (interactive "P\nsNew title: ")
  (let ((notename (concat (format-time-string "%Y-%m-%d-%H%M ") (notdeft-title-to-notename title))))
    (notdeft-sub-new-file (or data title) notename pfx)))




#+END_SRC
