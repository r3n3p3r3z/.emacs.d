#+TITLE: org-web-tools

r
#+BEGIN_SRC emacs-lisp
 (use-package org-web-tools
 :ensure t)

 (defun my/org-attach-download (url)
   "Download file at URL and attach with `org-attach'.
 Interactively, look for URL at point, in X clipboard, and in
 kill-ring, prompting if not found.  With prefix, prompt for URL."
   (interactive (list (if current-prefix-arg
                          (read-string "URL: ")
			(or (org-element-property :raw-link (org-element-context))
                            (org-web-tools--get-first-url)
                            (read-string "URL: ")))))
   (when (yes-or-no-p (concat "Attach file at URL: " url))
     (let* ((temp-dir (make-temp-file "org-attach-download-" 'dir))
            (basename (file-name-nondirectory (directory-file-name url)))
            (local-path (expand-file-name basename temp-dir))
            size)
       (unwind-protect
           (progn
             (url-copy-file url local-path 'ok-if-exists 'keep-time)
             (setq size (file-size-human-readable
                         (file-attribute-size
                          (file-attributes local-path))))
             (org-attach-attach local-path nil 'mv)
             (message "Attached %s (%s)" url size))
         (delete-directory temp-dir)))))

 (setq org-web-tools-attach-archive-retry 10)


#+END_SRC
