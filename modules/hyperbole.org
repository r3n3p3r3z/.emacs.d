#+TITLE: Hyperbole

* Hyperbole
  Hyperbole is an efficient, programmable hypertextual information
  management system.

  Includes:
  - Hypertextual buttons
  - Hierarchical, record based contact maanger
  - rapid window and frame control system
  - multi-level auto-numbered outliner

  - Hypertext buttons can be embedded within files and other types.
  - Offers Keyboard and mous-based control of information with multiple
    windows
  - Has point and click access to URLS, manuals archives etc
  
#+BEGIN_SRC emacs-lisp
(require 'package)
(setq package-enable-at-startup nil) ;; Prevent double loading of libraries
(unless (package-installed-p 'hyperbole)
  (package-refresh-contents)
  (package-install 'hyperbole))

(require 'hyperbole)

(defun goto-button (heading loc)
  (widen)
  (goto-char(point-min))
  (search-forward-regexp heading)
  (org-narrow-to-subtree)
  (search-forward-regexp loc)
  (recenter-top-bottom)
)



(defun my/avy-goto-jump (char &optional arg)
  "Jump to the currently visible CHAR.
The window scope is determined by `avy-all-windows' (ARG negates it)."
  (interactive (list (read-char "char: " t)
                     current-prefix-arg))

  (avy-with avy-goto-char
    (avy-jump
     (if (= 13 char)
         "\n"
       (regexp-quote (string char)))
     :window-flip arg))
  (hkey-either arg)
  )


(defun switch-to-dashboard ()
  "Switch to the `*scratch*' buffer. Create it first if needed."
  (interactive)
  (let ((exists (get-buffer "HYPB")))
    (switch-to-buffer "HYPB")))



(define-key global-map (kbd "C-h h") 'hyperbole)

(global-set-key (kbd "<f12>") 'switch-to-dashboard)




#+END_SRC

